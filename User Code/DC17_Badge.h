/******************************************************************************
*
* DEFCON 17 BADGE
*
* Filename:		DC17_Badge.h
* Author:		  Joe Grand (Kingpin)
* Revision:		1.0
*
* Description:	Header File for the DEFCON 17 Badge (Freescale MC56F8006)
* Notes:
*
* None yet!	
*******************************************************************************/

#ifndef __DC17__
#define __DC17__


// Morse code table for morse.c
#define SPACE_MASK		((unsigned int)1 << 15)
#define BIT_MASK 			0xFE
#define WPM						10 					// words per minute
#define UNIT_TIME 		1200/WPM   	// in mS
__pmem static const unsigned int codes[64] = { 
  	SPACE_MASK,                      //  Entry 0 = space (0x20)
    0, 0, 0, 0, 0, 0, 0, 0,          //  ! " # $  % & " (  
    0, 0, 0, 115, 49, 106, 41,       //  ) * + , - . /     
    63, 62, 60, 56, 48, 32, 33, 35,  //  0 1 2 3 4 5 6 7   
    39, 47, 0, 0, 0, 0, 0, 76,       //  8 9 : ; < = > ?   
    0, 6, 17, 21, 9, 2, 20, 11,      //  @ A B C D E F G   
    16, 4, 30, 13, 18, 7, 5, 15,     //  H I J K L M N O   
    22, 27, 10, 8, 3, 12, 24, 14,    //  P Q R S T U V W   
    25, 29, 19                       //  X Y Z 
   };

static const unsigned char sec[14] = {
  48, 68, 65, 89, 46, 67, 79, 77, 47, 78, 48, 49, 90, 0
  };

// RGB LED tables (PWM values)
#define  LED_TabLength    252*4
// pulsing
__pmem static const unsigned int LEDB[]={65385,65385,65385,65385,65385,65385,65385,65385,
65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,
65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,
65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,57866,52635,47404,
42173,36943,34327,31712,29096,26481,23866,21250,19942,18635,17327,16019,14712,
13404,12096,10789, 9481, 8173, 7519, 6865, 6212, 5558, 4904, 4577, 4250, 3923,
 3596, 3269, 2942, 2615, 2288, 1962, 1635, 1308,  981,  654,  327,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  327,  654,  981, 1308, 1635, 1962, 2288, 2615,
 2942, 3269, 3596, 3923, 4250, 4577, 4904, 5558, 6212, 6865, 7519, 8173, 9481,
10789,12096,13404,14712,16019,17327,18635,19942,21250,23866,26481,29096,31712,
34327,36943,39558,42173,44789,47404,52635,57866,65385,65385,65385,65385,65385,
65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,
65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,
65385,65385,65385,65385,65385,65385,65385,65385,65385,65385,65385};

__pmem static const unsigned int LEDR[]={  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  311,
  638,  965, 1292, 1619, 1946, 2272, 2599, 2926, 3253, 3580, 3907, 4234, 4561,
 4888, 5542, 6196, 6849, 7503, 8157, 9465,10773,12080,13388,14696,16003,17311,
18619,19926,21234,23850,26465,29080,31696,34311,36927,39542,42157,44773,47388,
52619,57850,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,
65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,
65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,
65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,
65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,
65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,65369,
65369,65369,65369,65369,65369,65369,65369,65369,65369,57850,52619,47388,42157,
36927,34311,31696,29080,26465,23850,21234,19926,18619,17311,16003,14696,13388,
12080,10773, 9465, 8157, 7503, 6849, 6196, 5542, 4888, 4561, 4234, 3907, 3580,
 3253, 2926, 2599, 2272, 1946, 1619, 1292,  965,  638,  311,  150}; 
 
__pmem static const unsigned int LEDG[]={  150,  295,  622,  949, 1276, 1603, 1930, 2256, 
 2583, 2910, 3237, 3564, 3891, 4218, 4545, 4872, 5526, 6180, 6833, 7487, 8141,
 9449,10757,12064,13372,14680,15987,17295,18603,19910,21218,23834,26449,29064,
31680,34295,36911,39526,42141,44757,47372,52603,57834,65353,65353,65353,65353,
65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,
65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,
65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,
65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,
65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,
65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,65353,
65353,65353,65353,57834,52603,47372,42141,36911,34295,31680,29064,26449,23834,
21218,19910,18603,17295,15987,14680,13372,12064,10757, 9449, 8141, 7487, 6833,
 6180, 5526, 4872, 4545, 4218, 3891, 3564, 3237, 2910, 2583, 2256, 1930, 1603,
 1276,  949,  622,  295,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,  150}; 


/**************************************************************************
************************** Definitions ************************************
***************************************************************************/

#define LOW   0
#define HIGH  1

#define ON    (unsigned int)~0xB000 	// max. LED brightness (helps limit current consumption), can be up to 0xFFFF
#define OFF   (unsigned int)~0

#define SLEEP_THRESH		56789    // min. noise energy to keep system awake
#define DANCE_THRESH		345678   // min. noise energy to keep system in dance mode

#define SLEEP_TMR				1875		// sleep if noise energy below threshold for 15 seconds (x ms / 8)
#define SOS_TMR					112500	// send out a mayday alert if you're in dance mode for 15 minutes
//#define RAND_TMR				625			// update the randomizer every 5 seconds
#define DANCE_TMR				400			// hysteresis timer to stay in dance mode (~5 sec., not an accurate timer)


// Real Fast Fourier Transform (FFT)
// Frequency resolution (delta F) = Fs/samples = 8000/32 = 250Hz
#define MAX_RFFT_LEN					8		// length of the complex FFT input vector
#define ADC_MAX_BUFFER_SIZE		(MAX_RFFT_LEN * 4)


/**************************************************************************
************************** Macros *****************************************
***************************************************************************/


/**************************************************************************
************************** Structs ****************************************
***************************************************************************/

typedef enum
{
	FFT,
	I2C
} badge_state_type;


typedef enum
{
	RED,
	GREEN,
	BLUE						// note: at vcc < ~2.65V, the blue LED will stop working (its Vf = 3.3V)
} led_state_type; // used for LED multiplexing

	
typedef enum
{						// A2..A0		I2C address
  ALL,			//					0 (broadcast)
	UBER, 		// 000			1
	GOON,			// 001			2
	CONTEST,	// 010			3
	SPEAKER,	// 011			4
	VENDOR,		// 100			5
	PRESS,		// 101			6
	UNUSED,		// 110			7
	HUMAN 		// 111 			8
} badge_type_struct; // type of badge


struct packed_flags
{
	byte PerformFFT : 1;  // time to do an FFT
	byte ptr_update : 1;  // pointer into RGB blending values table has changed
	byte sleep 			: 1;	// time to sleep
	byte i2c_rx 		: 1;  // i2c rx buffer full
	byte i2c_nack 	: 1; 	// i2c no ACK received from slave
}; 	
	
/***********************************************************************
 ************************** Function prototypes ************************
 ***********************************************************************/

void dc17_badge(void);
void dc17_init(void);

void dc17_fft(void);
void dc17_process_fft(void);
void dc17_sleep(void);

void dc17_i2c_init(void);
void dc17_i2c_check(void);
void dc17_i2c_slave(void);

void dc17_pit_isr(void);
void dc17_t0_isr(void);
void dc17_t1_isr(void);
void delay_ms(unsigned int ms);

// morse code
void morse(char *cp);
void send_dot(void);
void send_dash(void);
void ltr_space(void);
void word_space(void);

#endif /* __DC17__ */
